{"version":3,"sources":["left-column/profile-pic/ProfilePic.tsx","left-column/name/Name.tsx","left-column/description/Description.tsx","left-column/location/Location.tsx","left-column/contact-info/ContactInfo.tsx","left-column/resume/resume.tsx","panel/Panel.tsx","left-column/LeftColumn.tsx","projects/components/utils/degreesToRadians.ts","projects/components/matterport-logo/MatterportLogo.ts","projects/components/boundaries/Boundaries.ts","projects/components/desk/Desk.ts","projects/components/bedroom/Bedroom.ts","projects/components/scene/SceneCore.ts","projects/components/scene/SceneComponent.tsx","projects/Projects.tsx","work-exp/pie/Pie.tsx","modal/Modal.tsx","work-exp/exp-bar/ExpBar.tsx","work-exp/badges/Badges.tsx","button/Button.tsx","work-exp/WorkExp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ProfilePic","props","state","id","alt","this","profileAlt","src","process","profileSrc","React","Component","Name","name","Description","description","Location","className","location","ContactInfo","href","target","rel","contactInfo","Resume","link","document","createElement","body","appendChild","click","removeChild","Panel","title","children","LeftColumn","degreesToRadians","degree","Math","PI","MatterportLogo","logo","tempGeometry","material","rotations","x","y","z","positions","LShapeGeometry","createMeshLogo","root","Object3D","i","geometry","BoxGeometry","j","length","Mesh","position","updateMatrix","merge","matrix","mesh","rotateX","rotateY","rotateZ","add","MeshPhongMaterial","color","transparent","side","DoubleSide","reflectivity","opacity","specular","scale","copy","Vector3","rotation","Boundaries","camera","boundaries","wallMaterial","materialTransparent","floorMaterial","floor","addToFloor","obj","loader","TextureLoader","floorTexture","load","wrapS","wrapT","RepeatWrapping","repeat","set","anisotropy","encoding","sRGBEncoding","MeshLambertMaterial","map","wallTexture","MeshBasicMaterial","createWalls","walls","createWallMeshes","positionWalls","createFloor","positionFloor","PlaneBufferGeometry","receiveShadow","BoxBufferGeometry","lookAt","Desk","addSceneNode","GLTFLoader","onLoad","scene","Bedroom","SceneCore","canvas","renderer","components","controls","canvasWidth","canvasHeight","currentScene","sceneProjects","sceneObjMap","init","background","Color","setSize","domElement","activate","node","componentName","visible","animate","requestAnimationFrame","renderScene","update","forEach","c","Object","entries","key","value","Scene","PerspectiveCamera","WebGLRenderer","antialias","alpha","projectName","includes","matterportLogo","matterportLogoLight","DirectionalLight","castShadow","container","animalCrossLight","SpotLight","createControls","loadObjects","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","createDesk","createBedroom","render","SceneComponent","sceneCore","nextProps","currentProject","updateSlideDirection","updateProject","getElementById","Projects","projects","projectsMap","0","1","onNext","setState","prevState","slideDirection","currentProjectCount","onPrev","onClick","Pie","totalCircumference","clickTimeout","pieClicked","window","clearTimeout","setTimeout","onMouseOver","e","classList","contains","pieHover","onMouseOut","circleElements","viewSize","percentage","calculatePercentage","index","createProgressCircle","circumference","completion","strokeColor","radius","diameter","offsetCompletion","d","stroke","strokeDasharray","strokeDashoffset","months","viewBox","renderCircleElements","Modal","contentRef","onClose","onScroll","scrollTop","current","scrolled","iconDownTop","createRef","currentHeight","clientHeight","iconDownStyle","top","ref","style","ExpBar","text","width","backgroundColor","Badges","badges","badge","idx","renderBadges","Button","onBtnClick","WorkExp","onOpenModal","openModal","onCloseModal","matterportExp","ellieMaeDevExp","ellieMaeDevInternExp","ellieMaeQAExp","allow","height","scrolling","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5d030547.chunk.js","sourcesContent":["import React from 'react';\nimport './profilePic.scss';\n\nclass ProfilePic extends React.Component<ProfilePicProps, {}> {\n  constructor(props: ProfilePicProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='profile-pic'>\n      <img alt={this.props.profileAlt} src={`${process.env.PUBLIC_URL}/images/${this.props.profileSrc}`}/>\n    </div>);\n  }\n}\n\ninterface ProfilePicProps {\n  profileAlt: string;\n  profileSrc: string;\n}\n\nexport default ProfilePic;\n","import React from 'react';\nimport './name.scss';\n\nclass Name extends React.Component<NameProps, {}> {\n  constructor(props: NameProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='name'>\n      <span>{this.props.name}</span>\n    </div>);\n  }\n}\n\ninterface NameProps {\n  name: string;\n}\n\nexport default Name;\n","import React from 'react';\n\nclass Description extends React.Component<DescriptionProps, {}> {\n  constructor(props: DescriptionProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='description'>\n      <p>{this.props.description}</p>\n    </div>);\n  }\n}\n\ninterface DescriptionProps {\n  description: string;\n}\n\nexport default Description;\n","import React from 'react';\nimport './location.scss';\nimport '../../font-icons/style.scss';\n\nclass Location extends React.Component<LocationProps, {}> {\n  constructor(props: LocationProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='location'>\n      <span className='bryan icon-location'/>\n      <span className='location'>{this.props.location}</span>\n    </div>);\n  }\n}\n\ninterface LocationProps {\n  location: string;\n}\n\nexport default Location;\n","import React from 'react';\nimport './contactInfo.scss';\n\nclass ContactInfo extends React.Component<ContactInfoProps, {}> {\n  constructor(props: ContactInfoProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='contact-info'>\n      <div>\n        <a className='linkedin' href='https://www.linkedin.com/in/bryancnguyen/' target='_blank' rel='noopener noreferrer'>LinkedIn</a>\n      </div>\n      <div>\n        <a className='github' href='https://github.com/Bryancnguyen' target='_blank' rel='noopener noreferrer'>Github</a>\n      </div>\n      <div>\n        <a className='email' href='mailto:bryancanhnguyen@gmail.com'>{this.props.contactInfo}</a>\n      </div>\n    </div>);\n  }\n}\n\ninterface ContactInfoProps {\n  contactInfo: string;\n}\n\nexport default ContactInfo;\n","import React from 'react';\nimport './resume.scss';\n\nclass Resume extends React.Component{\n  constructor(props: {}) {\n    super(props);\n    this.state = {};\n  }\n\n  private onResumeBtnClick() {\n    const link = document.createElement('a');\n    link.href = `${process.env}/images/BryansResume.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  render() {\n    return (\n    <div id='resume'>\n      {/* <button onClick={this.onResumeBtnClick}>Resume</button> */}\n    </div>);\n  }\n}\n\n\nexport default Resume;\n","import React from 'react';\nimport './panel.scss';\n\nclass Panel extends React.Component<PanelProps, {}> {\n  constructor(props: PanelProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n    <div className='panel'>\n      { this.props.title && <h2>{title}</h2> }\n      {this.props.children}\n    </div>);\n  }\n}\n\ninterface PanelProps {\n  title?: string;\n}\n\nexport default Panel;\n","import React from 'react';\nimport './leftColumn.scss';\nimport ProfilePic from './profile-pic/ProfilePic';\nimport Name from './name/Name';\nimport Description from './description/Description';\nimport Location from './location/Location';\nimport ContactInfo from './contact-info/ContactInfo';\nimport Resume from './resume/resume';\nimport Panel from '../panel/Panel';\n\nclass LeftColumn extends React.Component<{}, LeftColumnState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      profileAlt: 'bryan\"/s profile pic',\n      profileSrc: 'profile_pic.jpg',\n      name: 'Bryan Nguyen',\n      description: 'Software Engineer',\n      location: 'San Jose, CA',\n      contactInfo: 'bryancanhnguyen@gmail.com'\n    };\n  }\n\n  render() {\n    return (\n      <div id='left-column'>\n        <Panel>\n          <div className='profile-container'>\n            <ProfilePic profileAlt={this.state.profileAlt} profileSrc={this.state.profileSrc}/>\n            <Name name={this.state.name}/>\n            <Description description={this.state.description}/>\n            <Location location={this.state.location}/>\n            <ContactInfo contactInfo={this.state.contactInfo}/>\n            <Resume />\n          </div>\n        </Panel>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n  }\n}\n\ninterface LeftColumnState {\n  profileAlt: string;\n  profileSrc: string;\n  name: string;\n  description: string;\n  location: string;\n  contactInfo: string;\n}\n\nexport default LeftColumn;\n","export const degreesToRadians = (degree: number) => {\n  return degree * (Math.PI / 180);\n}","import { Object3D, MeshPhongMaterial, DoubleSide, BoxGeometry, Mesh, Geometry, Vector3 } from 'three';\nimport { degreesToRadians } from '../utils/degreesToRadians';\nimport ComponentType from '../ComponentType';\n\nexport class MatterportLogo implements ComponentType {\n  public readonly name = 'matterport-logo';\n  private logo: Object3D;\n  private tempGeometry: Mesh | null;\n  private material: MeshPhongMaterial;\n  // private currentLevitate: number = 0;\n  // private maxLevitate: number = 200;\n  // private goingUp: boolean = true;\n  private rotations = [\n    { x: 25, y: -43.05, z: 0 },\n  ];\n  private positions = [\n    { x: 0, y: 0, z: 0 },\n  ];\n  private LShapeGeometry = [\n    { x: 1, y: 0, z: 0 },\n    { x: 1, y: 1, z: 0 },\n    { x: 1, y: 2, z: 0 },\n    { x: -1, y: 0, z: 0 },\n    { x: 1, y: 3, z: 0 },\n    { x: 1, y: 4, z: -0 },\n    { x: 1, y: 4, z: -1 },\n    { x: 1, y: 4, z: -2 },\n    { x: 1, y: 4, z: -3 },\n    // OPPOSITE SIDE\n    { x: 0, y: 4, z: -3 },\n    { x: -1, y: 4, z: -3 },\n    { x: -2, y: 4, z: -3 },\n    { x: -2, y: 3, z: -3 },\n    { x: -2, y: 2, z: -3 },\n    { x: -2, y: 1, z: -3 },\n    { x: -2, y: 0, z: -3 },\n    { x: -2, y: 0, z: -2 },\n    { x: -2, y: 0, z: -1 },\n    { x: -2, y: 0, z: 0 },\n  ];\n\n  constructor() {\n    this.material = new MeshPhongMaterial({\n      color: 0xFF3158,\n      transparent: true,\n      side: DoubleSide,\n      reflectivity: 1,\n      opacity: 0.8,\n      specular: 0xFC7A8C,\n    });\n    this.logo = this.createMeshLogo();\n    this.tempGeometry = null;\n    this.logo.scale.copy(new Vector3(50, 50, 50));\n  }\n\n  public get container() {\n    return this.logo;\n  }\n\n  /**\n   * Construct Matterport Logo\n   */\n  private createMeshLogo = () => {\n    const root = new Object3D();\n    for (let i = 0; i < 1; i++) {\n      const geometry = new BoxGeometry(5, 5, 5);\n      for (let j = 0; j < this.LShapeGeometry.length; j++) {\n        this.tempGeometry = new Mesh(new BoxGeometry(5, 5, 5));\n        this.tempGeometry.position.x = 5 * this.LShapeGeometry[j].x;\n        this.tempGeometry.position.y = 5 * this.LShapeGeometry[j].y;\n        this.tempGeometry.position.z = i === 1 ? 5 * this.LShapeGeometry[j].z : -1 * (5 * this.LShapeGeometry[j].z);\n        this.tempGeometry.updateMatrix();\n        geometry.merge(this.tempGeometry.geometry as Geometry, this.tempGeometry.matrix);\n      }\n  \n      const mesh = new Mesh(geometry, this.material);\n  \n      mesh.rotateX(degreesToRadians(this.rotations[i].x)); /// 180\n      mesh.rotateY(degreesToRadians(this.rotations[i].y));\n      mesh.rotateZ(degreesToRadians(this.rotations[i].z));\n      mesh.position.x += this.positions[i].x;\n      mesh.position.y += this.positions[i].y;\n      mesh.position.z += this.positions[i].z;\n  \n  \n      root.add(mesh);\n    }\n    return root;\n  }\n\n  // TODO: right now its spinning, I probably dont want that later\n  public update() {\n    this.logo.rotation.y -= 0.01;\n    // if (parseFloat(this.currentLevitate.toFixed(1)) === this.maxLevitate) {\n    //   this.goingUp = false;\n    // }\n    // else if (parseFloat(this.currentLevitate.toFixed(1)) === 0) {\n    //   this.goingUp = true;\n    // }\n    // let addValue = this.goingUp ? 1 : -1;\n    // this.logo.position.y += addValue;\n    // this.currentLevitate += addValue;\n  }\n}\n\nexport default MatterportLogo;\n","import { Object3D, Mesh, Vector3, MeshLambertMaterial, TextureLoader, sRGBEncoding, RepeatWrapping, PlaneBufferGeometry, DoubleSide, MeshBasicMaterial, Camera, BoxBufferGeometry } from 'three';\nimport ComponentType from '../ComponentType';\n\nexport class Boundaries implements ComponentType {\n  public readonly name = 'animal-crossing';\n  private boundaries: Object3D;\n  private wallMaterial: MeshLambertMaterial;\n  private material: MeshBasicMaterial;\n  private materialTransparent: MeshBasicMaterial;\n  private floorMaterial: MeshBasicMaterial;\n  private floor: Object3D | null = null;\n  constructor(private camera: Camera) {\n    const loader = new TextureLoader();\n    const floorTexture = loader.load('assets/textures/a_flooring2.png');\n    floorTexture.wrapS = floorTexture.wrapT = RepeatWrapping;\n    floorTexture.repeat.set( 6, 6 );\n    floorTexture.anisotropy = 16;\n    floorTexture.encoding = sRGBEncoding;\n    this.floorMaterial = new MeshLambertMaterial({\n      map: floorTexture,\n    });\n    const wallTexture = loader.load('assets/textures/wall5.jpg');\n    wallTexture.wrapS = wallTexture.wrapT = RepeatWrapping;\n    wallTexture.repeat.set( 2, 2 );\n    wallTexture.anisotropy = 16;\n    wallTexture.encoding = sRGBEncoding;\n    this.wallMaterial = new MeshLambertMaterial({\n      side: DoubleSide,\n      map: wallTexture,\n    });\n    this.material = new MeshLambertMaterial({\n      color: 0xFF3158,\n      transparent: true,\n      side: DoubleSide,\n      opacity: 0.8,\n    });\n    this.materialTransparent =  new MeshBasicMaterial( { transparent: true, opacity: 0, side: DoubleSide} );\n\n    this.boundaries = this.createWalls();\n  }\n\n  private createWalls() {\n    const root = new Object3D();\n    const walls = this.createWallMeshes();\n    this.positionWalls(walls);\n    this.floor = this.createFloor();\n    this.positionFloor(this.floor);\n    walls.add(this.floor);\n\n    // create Entrance\n    // const entrance = this.createEntrance();\n    // root.add(entrance);\n\n    root.add(walls);\n\n    // floor.add(wall1);\n    // floor.add(wall2);\n    root.scale.copy(new Vector3(1, 1, 1));\n    return root;\n  }\n\n  private createFloor() {\n    const geometry = new PlaneBufferGeometry(3500, 2000);\n    const mesh = new Mesh(geometry, this.floorMaterial);\n    mesh.receiveShadow = true;\n    return mesh;\n  }\n\n  private createWallMeshes() {\n    const geometry = new BoxBufferGeometry(3500, 2000, 1500);\n    const mesh = new Mesh(geometry, [this.wallMaterial, this.wallMaterial,\n      this.wallMaterial, this.materialTransparent, this.materialTransparent, this.materialTransparent]);\n    mesh.receiveShadow = true;\n    return mesh;\n  }\n\n  // private createEntrance() {\n  //   const geometry = new PlaneBufferGeometry(500, 100);\n  //   const mesh = new Mesh(geometry, [this.])\n  // }\n\n  public addToFloor = (obj: Object3D) => {\n    if (this.floor) {\n      this.floor.add(obj);\n    }\n  }\n\n  private createFlatBox() {\n    const geometry = new PlaneBufferGeometry(2000, 2000);\n    const mesh = new Mesh(geometry, this.material);\n    mesh.lookAt(this.camera.position);\n    mesh.receiveShadow = true;\n    return mesh;\n  }\n\n  private positionWalls(mesh: Object3D) {\n    mesh.position.y = - 350;\n    mesh.rotation.x = - Math.PI / 4;\n  }\n\n  private positionFloor(mesh: Object3D) {\n    mesh.position.z = - 750;\n    // mesh.position.y = 350;\n  }\n\n  public get container() {\n    return this.boundaries;\n  }\n\n  public update() {}\n}\n\nexport default Boundaries;","import { Object3D } from 'three';\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\nexport class Desk {\n  constructor(private addSceneNode: (obj: Object3D) => void) {\n\n  }\n\n  public createDesk() {\n    const loader = new GLTFLoader();\n    loader.load(`${process.env.PUBLIC_URL}/assets/desk/scene.gltf`, (obj: GLTF) => this.onLoad(obj));\n  }\n\n  private onLoad(obj: GLTF) {\n    obj.scene.position.x = 1000;\n    obj.scene.position.y = 650;\n    obj.scene.rotation.x = - Math.PI / 2;\n    obj.scene.rotation.z = - Math.PI;\n    obj.scene.rotation.y = - Math.PI / 2;\n    obj.scene.scale.set(2.2, 2.2, 2.2);\n    this.addSceneNode(obj.scene);\n  }\n}\n\nexport default Desk;","import { Object3D } from 'three';\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\nexport class Bedroom {\n  constructor(private addSceneNode: (obj: Object3D) => void) {\n\n  }\n\n  public createBedroom() {\n    const loader = new GLTFLoader();\n    loader.load(`${process.env.PUBLIC_URL}/assets/bedroom/scene.gltf`, (obj: GLTF) => this.onLoad(obj));\n  }\n\n  private onLoad(obj: GLTF) {\n    obj.scene.position.x = -800;\n    obj.scene.position.z = 100;\n    obj.scene.position.y = 800;\n    obj.scene.rotation.x = - Math.PI / 2;\n    obj.scene.rotation.z = - Math.PI;\n    obj.scene.scale.set(13, 13, 13);\n    this.addSceneNode(obj.scene);\n  }\n}\n\nexport default Bedroom;","\nimport { Scene, PerspectiveCamera, Color, WebGLRenderer, Object3D, Camera, SpotLight, DirectionalLight } from 'three';\nimport MatterportLogo from '../matterport-logo/MatterportLogo';\nimport Boundaries from '../boundaries/Boundaries';\nimport ComponentType from '../ComponentType';\nimport Desk from '../desk/Desk';\nimport Bedroom from '../bedroom/Bedroom';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass SceneCore {\n  private camera: Camera;\n  private scene: Scene;\n  private renderer: WebGLRenderer;\n  private components: ComponentType[] = [];\n  private controls: OrbitControls | null = null;\n  private canvasWidth: number = 500;\n  private canvasHeight: number = 500;\n  private currentScene: string = '';\n  private sceneProjects = ['matterport-logo', 'animal-crossing'];\n  private sceneObjMap: {[nodeName: string]: Object3D} = {};\n\n  constructor(private canvas: HTMLElement) {\n    // set up the scene\n    this.scene = new Scene();\n    this.camera = new PerspectiveCamera( 90, this.canvasWidth / this.canvasHeight, 1, 10000 );\n    this.renderer = new WebGLRenderer({ antialias: true, alpha: true });\n  }\n\n  public init = () => {\n    this.camera.position.set( 0, 0, 2500 );\n    this.scene.add(this.camera);\n    // set scene color\n    this.scene.background = new Color(0x121212);\n    this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.canvas) {\n      this.canvas.appendChild(this.renderer.domElement);\n    }\n    this.activate();\n  }\n\n  public updateProject(projectName: string) {\n    if (!this.sceneProjects.includes(projectName)) {\n      // if the project doesn't exist, it's probably because its not a threejs Project, so go ahead hide\n      this.scene.visible = false;\n    } else {\n      // if the project does exist, find the object and update its visibility in our scene\n      this.currentScene = projectName;\n    }\n  }\n\n  private activate() {\n    // Boundaries will contain the entire group of objects inside it! Hierarchy!\n    const boundaries = new Boundaries(this.camera);\n    const matterportLogo = new MatterportLogo();\n\n    // TODO: move this light creation some where else\n    const matterportLogoLight = new DirectionalLight(0xFFFFFF, 2.5);\n    matterportLogoLight.position.copy(this.camera.position);\n    matterportLogoLight.castShadow = true;\n    matterportLogo.container.add(matterportLogoLight)\n\n    const animalCrossLight = new SpotLight(0xFBEEE4, 1.5);\n    animalCrossLight.position.copy(this.camera.position);\n    animalCrossLight.castShadow = true;\n    boundaries.container.add(animalCrossLight);\n \n    this.addSceneNode(matterportLogo.container, matterportLogo.name);\n    this.addSceneNode(boundaries.container, boundaries.name);\n\n    // show the matterport logo as its the first project\n    this.currentScene = matterportLogo.name;\n\n    // create controls\n    this.createControls(this.camera, this.renderer);\n\n    // lazy load content\n    this.loadObjects(boundaries);\n\n    this.components = [matterportLogo];\n  }\n\n  private createControls(camera: Camera, renderer: WebGLRenderer) {\n    this.controls = new OrbitControls( camera, renderer.domElement );\n    this.controls.enableDamping = true;\n    this.controls.dampingFactor = 0.05;\n\n    this.controls.screenSpacePanning = false;\n\n    this.controls.minDistance = 1000;\n    this.controls.maxDistance = 5000;\n\n    this.controls.maxPolarAngle = Math.PI / 2;\n  }\n\n  private loadObjects(boundaries: Boundaries) {\n    const desk = new Desk(boundaries.addToFloor);\n    desk.createDesk();\n\n    const bedroom = new Bedroom(boundaries.addToFloor);\n    bedroom.createBedroom();\n  }\n\n  /**\n   * Function to allow adding to scene\n   * @param node \n   */\n  public addSceneNode = (node: Object3D, componentName: string) => {\n    // start out not visible\n    node.visible = false;\n    this.scene.add(node);\n    this.sceneObjMap[componentName] = node;\n  }\n\n  /**\n   * Function allow retrieval of camera\n   */\n  public getCamera() {\n    return this.camera;\n  }\n\n  private renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Update loop for components and the scene\n   */\n  public animate = () => {\n    requestAnimationFrame(this.animate);\n    // render scene\n    this.renderScene();\n    // update controls!\n    if (this.controls) {\n      this.controls.update();\n    }\n    // call each components individual update loop\n    this.components.forEach((c: ComponentType) => {\n      c.update();\n    });\n\n    for (let [key, value] of Object.entries(this.sceneObjMap)) {\n      if (key === this.currentScene) {\n        value.visible = true;\n      } else {\n        value.visible = false;\n      }\n    }\n  }\n}\n\nexport default SceneCore;\n","import React from 'react';\nimport SceneCore from './SceneCore';\nimport './scene.scss';\nclass SceneComponent extends React.Component<SceneComponentProps, {}> {\n  private sceneCore: SceneCore | null = null;\n\n  constructor(props: SceneComponentProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (<div id='canvas'/>)\n  }\n\n  public componentDidUpdate(nextProps: SceneComponentProps) {\n    if (nextProps.currentProject === this.props.currentProject) return;\n    this.updateSlideDirection();\n  }\n\n  private updateSlideDirection() {\n    if (!this.sceneCore) return;\n    this.sceneCore.updateProject(this.props.currentProject);\n  }\n\n  public componentDidMount() {\n    const canvas = document.getElementById('canvas')!;\n    this.sceneCore = new SceneCore(canvas);\n    this.sceneCore.init();\n    this.sceneCore.animate();\n  }\n}\n\ninterface SceneComponentProps {\n  slideDirection: string;\n  currentProject: string;\n}\n\nexport default SceneComponent;\n","import React from 'react';\nimport './projects.scss';\nimport Panel from './../panel/Panel';\nimport SceneComponent from './components/scene/SceneComponent';\n\nclass Projects extends React.Component<{}, ProjectsState> {\n  private projects = ['matterport-logo', 'animal-crossing'];\n  private projectsMap: {[key: number]: string} = {\n    0: 'Matterport Logo',\n    1: 'Animal Crossing in Three'\n  }\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      slideDirection: '',\n      currentProjectCount: 0,\n    };\n  }\n\n  private onNext = () => {\n    this.setState((prevState: ProjectsState) => ({slideDirection: 'next', currentProjectCount: prevState.currentProjectCount + 1}));\n  }\n\n  private onPrev = () => {\n    this.setState((prevState: ProjectsState) => ({slideDirection: 'prev', currentProjectCount: prevState.currentProjectCount - 1}));\n  }\n\n  render() {\n    return (\n    <div id='projects'>\n      <Panel title={'Demos'}>\n        <div className='projects-container'>\n          <SceneComponent slideDirection={this.state.slideDirection} currentProject={this.projects[this.state.currentProjectCount]}/>\n          <div className='current-project'>\n            {\n            this.state.currentProjectCount !== 0 &&\n            <div className='click-prev' onClick={this.onPrev}>\n              <span className='bryan icon-prev'/>\n            </div>\n            }\n            <span className='project-name'>{this.projectsMap[this.state.currentProjectCount]}</span>\n            {\n              this.state.currentProjectCount !== this.projects.length - 1 &&\n              <div className='click-next' onClick={this.onNext}>\n                <span className='bryan icon-next'/>\n              </div>\n            }\n          </div>\n        </div>\n      </Panel>\n    </div>);\n  }\n}\n\ninterface ProjectsState {\n  slideDirection: string;\n  currentProjectCount: number;\n}\n\nexport default Projects;\n","import React from 'react';\nimport './pie.scss';\n\n/**\n * Our little pie will be made up of X numbers of <circles></circles>\n * lets see how that goes..\n */\nclass Pie extends React.Component<PieProps, PieState> {\n  private totalCircumference = 0;\n  private clickTimeout: number = 0;\n\n  constructor(props: PieProps) {\n    super(props);\n    this.state = {\n      circleElements: [],\n      pieHover: false,\n      pieClicked: false,\n    };\n  }\n\n  private onClick = () => {\n    this.setState({pieClicked: true});\n    window.clearTimeout(this.clickTimeout);\n    this.clickTimeout = window.setTimeout(() => {\n      this.setState({pieClicked: false});\n    }, 500);\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private renderCircleElements() {\n    this.totalCircumference = 0;\n    const circles = [{\n      c: 100,\n      viewSize: 40,\n      className: 'circle-bg',\n      onClick: this.onClick,\n    }, {\n      c: 110,\n      viewSize: 40,\n      className: `circle-bg-clicked ${this.state.pieClicked ? 'active': ''}`,\n      onClick: this.onClick,\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(31),\n      color: '#ffdb8d',\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(22),\n      color: '#0AE6E5',\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(15),\n      color: '#ffa28d',\n    },\n    {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(22),\n      color: '#ff8db1',\n    }];\n    \n    return circles.map((c, index) => {\n      return this.createProgressCircle(c.c, c.viewSize, c.className, index, c.percentage, c.color, c.onClick);\n    });\n  }\n\n  private createProgressCircle(circumference: number, viewSize: number, className: string, index: number, completion?: number, strokeColor?: string, onClick?: () => void) {\n    const radius = circumference / (2 * Math.PI);\n    const diameter = radius * 2;\n    const x = viewSize / 2;\n    const y = ((viewSize - diameter) / 2);\n    const offsetCompletion = this.totalCircumference > 0 ? -this.totalCircumference : this.totalCircumference;\n    this.totalCircumference += circumference && completion ? completion : 0;\n    if (strokeColor && completion) {\n      return (\n        <path\n          key={`circle-${index}`}\n          className={className}\n          d={`M${x} ${y} a ${radius} ${radius} 0 0 1 0 ${diameter} a ${radius} ${radius} 0 0 1 0 -${diameter}`}\n          stroke={strokeColor}\n          onClick={onClick}\n          strokeDasharray={`${completion}, 100`}\n          strokeDashoffset={offsetCompletion}\n        />\n      );\n    } else {\n      return (\n        <path\n          key={`circle-${index}`}\n          onClick={onClick}\n          className={className}\n          d={`M${x} ${y} a ${radius} ${radius} 0 0 1 0 ${diameter} a ${radius} ${radius} 0 0 1 0 -${diameter}`}\n        />\n      );\n    }\n  }\n\n  private calculatePercentage(months: number) {\n    const totalMonths = 90;\n    const monthPercentage = (months / totalMonths) * 100;\n\n    return monthPercentage;\n  }\n\n  private onMouseOver = (e: React.MouseEvent) => {\n    const target = e.target as HTMLElement;\n    if (!target) return;\n    if (target.classList.contains('circle-bg') || target.classList.contains('percentage') || target.classList.contains('circle-bg-clicked')) {\n      this.setState({pieHover: true});\n    }\n  }\n\n  private onMouseOut = (e: never) => {\n    this.setState({pieHover: false});\n  }\n\n  render() {\n    return (\n    <div id='pie' className={this.state.pieHover ? 'pieHover': ''} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\n      <svg viewBox=\"0 0 40 40\" className=\"circular-chart\">\n      {this.renderCircleElements()}\n      <text x=\"20\" y=\"22\" className=\"percentage\" onClick={this.onClick}>~5Y</text>\n    </svg>\n    </div>);\n  }\n}\n\ninterface PieState {\n  circleElements: JSX.Element[];\n  pieHover: boolean;\n  pieClicked: boolean;\n}\n\ninterface PieProps {\n  onClick?: () => void;\n}\n\n/**\n * Pie should be able to take in a set of items each with their own\n * percentage of the pie. \n */\n\nexport default Pie;\n","import React, { RefObject } from 'react';\nimport './modal.scss';\n\nclass Modal extends React.Component<ModalProps, ModalState> {\n  private contentRef: React.Ref<HTMLDivElement> | null = null;\n\n  constructor(props: ModalProps) {\n    super(props);\n    this.state = {\n      iconDownTop: 0,\n      scrolled: false,\n    };\n    this.contentRef = React.createRef();\n  }\n\n  private onClose = () => {\n    this.props.onClose();\n  }\n\n  public componentDidMount() {\n    if (this.contentRef) {\n      const ref = this.contentRef as RefObject<HTMLDivElement>;\n      const currentHeight = ref.current?.clientHeight;\n      this.setState({iconDownTop: currentHeight ? currentHeight - 40 : 0});\n    }\n  }\n\n  private onScroll = () => {\n    if (this.contentRef) {\n      const ref = this.contentRef as RefObject<HTMLDivElement>;\n      const scrollTop = ref.current?.scrollTop;\n      if (scrollTop && scrollTop > 0) {\n        this.setState({scrolled: true});\n      }\n      if (scrollTop === 0 && this.state.scrolled) {\n        this.setState({scrolled: false});\n      }\n    }\n  }\n\n  render() {\n    const iconDownStyle = {\n      top: `${this.state.iconDownTop}px`,\n    }\n    return (\n    <div className='modal'>\n      <div className='modal-overlay' onClick={this.onClose}/>\n      <div className='modal-container' ref={this.contentRef} onScroll={this.onScroll}>\n        <span className='bryan icon-close' onClick={this.onClose}/>\n        <div className='content'>\n          {this.props.children}\n          { !this.state.scrolled &&\n            <span className='bryan icon-down' style={iconDownStyle}/>\n          }\n        </div>\n        </div>\n    </div>);\n  }\n}\n\ninterface ModalProps {\n  onClose: () => void;\n}\n\ninterface ModalState {\n  iconDownTop: number;\n  scrolled: boolean;\n}\n\nexport default Modal;\n","import React from 'react';\nimport './expBar.scss';\n\nclass ExpBar extends React.Component<ExpBarProps, {}> {\n  constructor(props: ExpBarProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { color, percentage, text } = this.props;\n\n    const style = {\n      width: percentage * 12,\n      backgroundColor: color,\n    }\n\n    return (\n    <div className='exp-bar'>\n      <div className='bar' style={style}/>\n      <span className='text'>{text}</span>\n    </div>);\n  }\n}\n\ninterface ExpBarProps {\n  percentage: number;\n  text: string;\n  color: string;\n}\n\nexport default ExpBar;\n","import React from 'react';\nimport './badges.scss';\n\nclass Badges extends React.Component<BadgesProps, {}> {\n  constructor(props: BadgesProps) {\n    super(props);\n    this.state = {};\n  }\n\n  private renderBadges() {\n    return this.props.badges.map((badge, idx) => {\n      return (\n      <span key={`badge-${idx}`} className='badge'>\n        {badge}\n      </span>)\n    });\n  }\n\n  render() {\n    return (\n    <div className='badges'>\n      { this.renderBadges() }\n    </div>);\n  }\n}\n\ninterface BadgesProps {\n  badges: string[];\n}\n\nexport default Badges;\n","import React from 'react';\nimport './button.scss';\n\nclass Button extends React.Component<ButtonProps, {}>{\n  constructor(props: ButtonProps) {\n    super(props);\n    this.state = {};\n  }\n\n  private onBtnClick = () => {\n    this.props.onClick();\n  }\n\n  render() {\n    return (\n    <div className='bry-button'>\n      <button className='bry-button-elem' onClick={this.onBtnClick}>{this.props.text}</button>\n    </div>);\n  }\n}\n\ninterface ButtonProps {\n  text: string;\n  onClick: () => void;\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./workExp.scss\";\nimport Panel from \"../panel/Panel\";\nimport Pie from \"./pie/Pie\";\nimport Modal from \"../modal/Modal\";\nimport ExpBar from \"./exp-bar/ExpBar\";\nimport Badges from \"./badges/Badges\";\nimport Button from \"../button/Button\";\nclass WorkExp extends React.Component<{}, WorkExpState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      openModal: false,\n    };\n  }\n\n  private onOpenModal = () => {\n    this.setState({ openModal: true });\n  };\n\n  private onCloseModal = () => {\n    this.setState({ openModal: false });\n  };\n\n  private calculatePercentage(months: number) {\n    const totalMonths = 90;\n    const monthPercentage = (months / totalMonths) * 100;\n    return monthPercentage;\n  }\n\n  render() {\n    const matterportExp = this.calculatePercentage(22);\n    const matterportBadges = [\n      \"Typescript\",\n      \"ReactJS\",\n      \"Preact\",\n      \"ThreeJS\",\n      \"NodeJS\",\n      \"Jest\",\n    ];\n\n    const ellieMaeDevExp = this.calculatePercentage(15);\n    const ellieMae1Badges = [\n      \"AngularJS\",\n      \"NodeJS\",\n      \"Mocha\",\n      \"Jasmine\",\n      \"Karma\",\n    ];\n\n    const ellieMaeDevInternExp = this.calculatePercentage(22);\n    const ellieMaeDevInternBadges = [\n      \"AngularJS\",\n      \"Wordpress\",\n      \"PHP\",\n      \"Content Management System\",\n    ];\n\n    const ellieMaeQAExp = this.calculatePercentage(31);\n    const ellieMaeQABadges = [\n      \"Java\",\n      \"Selenium\",\n      \"Appium\",\n      \"WebDriverIO\",\n      \"SoapUI\",\n      \"Post Man\",\n    ];\n\n    return (\n      <div id=\"work-exp\">\n        <Panel title={\"Work Experience\"}>\n          <Pie onClick={this.onOpenModal} />\n          {this.state.openModal && (\n            <Modal onClose={this.onCloseModal}>\n              <div className=\"header\">Matterport</div>\n              <div className=\"sub-header\">Software Engineer</div>\n              <ExpBar\n                text={\"1 Year 10 Months\"}\n                color={\"#ff8db1\"}\n                percentage={matterportExp}\n              />\n              <p>\n                Worked on researching and creating new user experiences within\n                Showcase and Workshop\n              </p>\n              <hr />\n              <p>\n                Showcase was a viewer for the a 3D model that a user could\n                interact with and could be embed within webpages\n              </p>\n              <hr />\n              <p>\n                Workshop was an editor that allowed model owners to edit how a\n                model would be presented to the viewer\n              </p>\n              <iframe\n                title=\"matterport\"\n                allow=\"vr\"\n                height=\"480\"\n                width=\"700\"\n                src=\"https://my.matterport.com/show/?m=f6dv1vRds4q\"\n                id=\"iFrameResizer0\"\n                scrolling=\"no\"\n              ></iframe>\n              <Badges badges={matterportBadges} />\n              <div className=\"header\">Ellie Mae</div>\n              <div className=\"sub-header\">Software Engineer I / II</div>\n              <ExpBar\n                text={\"1 Year 5 months\"}\n                color={\"#8dffa2\"}\n                percentage={ellieMaeDevExp}\n              />\n              <p>\n                Worked on developing TPO Connect and TPO Admin, a web portal\n                that allowed investors and lenders to collaborate with their\n                customers\n              </p>\n              <hr />\n              <p>\n                TPO Connect had a rich set of features such as uploading\n                documents, ordering credit, and processing a loan from end to\n                end\n              </p>\n              <hr />\n              <p>\n                TPO Connnect Admin was another web portal that allowed investors\n                and lenders to personalize their TPO Connect portal and workflow\n              </p>\n              <img\n                className=\"tpo-photo\"\n                alt=\"TPO Connect\"\n                src={process.env.PUBLIC_URL + \"/images/tpo.png\"}\n              />\n              <Badges badges={ellieMae1Badges} />\n              <div className=\"header\">Ellie Mae</div>\n              <div className=\"sub-header\">Software Engineer Dev Intern</div>\n              <ExpBar\n                text={\"1 Year 10 months\"}\n                color={\"#ffa28d\"}\n                percentage={ellieMaeDevInternExp}\n              />\n              <p>\n                Worked on developing a content management system using Wordpress\n                and AngularJS\n              </p>\n              <hr />\n              <p>\n                Content management system was intended to be the source of truth\n                for re-usable UI components\n              </p>\n              <hr />\n              <p>\n                Content management system would allow UX designers and engineers\n                to collaborate when creating components that all teams could\n                bootstrap\n              </p>\n              <Badges badges={ellieMaeDevInternBadges} />\n              <div className=\"header\">Ellie Mae</div>\n              <div className=\"sub-header\">QA Engineer Intern</div>\n              <ExpBar\n                text={\"2 Year 7 Months\"}\n                color={\"#ffdb8d\"}\n                percentage={ellieMaeQAExp}\n              />\n              <p>\n                Worked as an automation QA Engineer creating scripts that tested\n                Ellie Mae's web application\n              </p>\n              <hr />\n              <p>\n                Responsible for writing test cases and designing automation\n                framework\n              </p>\n              <p>\n                Worked as a manual tester for Encompass, a desktop application\n                that ran only on Windows\n              </p>\n              <hr />\n              <p>\n                Worked as a manual tester for TPO, a web based application\n                developed with PHP\n              </p>\n              <Badges badges={ellieMaeQABadges} />\n            </Modal>\n          )}\n          <Button text={\"Show Experience\"} onClick={this.onOpenModal}/>\n        </Panel>\n      </div>\n    );\n  }\n}\n\ninterface WorkExpState {\n  openModal: boolean;\n}\n\nexport default WorkExp;\n","import React from 'react';\nimport './index.scss';\nimport './App.scss';\nimport LeftColumn from './left-column/LeftColumn';\nimport Projects from './projects/Projects';\nimport WorkExp from './work-exp/WorkExp';\n// import About from './about/About';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='row'>\n        <div className='column'>\n          <LeftColumn/>\n          <WorkExp />\n        </div>\n        <div className='column'>\n          <Projects/>\n          {/* <About/> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}