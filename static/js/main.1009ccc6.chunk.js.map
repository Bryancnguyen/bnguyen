{"version":3,"sources":["projects/Projects.tsx","left-column/profile-pic/ProfilePic.tsx","left-column/name/Name.tsx","left-column/description/Description.tsx","left-column/location/Location.tsx","left-column/contact-info/ContactInfo.tsx","left-column/resume/resume.tsx","panel/Panel.tsx","about/About.tsx","left-column/LeftColumn.tsx","projects/components/utils/degreesToRadians.ts","projects/components/matterport-logo/MatterportLogo.ts","projects/components/boundaries/Boundaries.ts","projects/components/desk/Desk.ts","projects/components/bedroom/Bedroom.ts","projects/components/scene/SceneCore.ts","projects/components/scene/SceneComponent.tsx","work-exp/pie/Pie.tsx","work-exp/exp-bar/ExpBar.tsx","work-exp/badges/Badges.tsx","work-exp/WorkExp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ProjectTypes","ProfilePic","props","state","id","alt","this","profileAlt","src","process","profileSrc","React","Component","Name","name","Description","description","Location","className","location","ContactInfo","href","target","rel","contactInfo","Resume","link","document","createElement","body","appendChild","click","removeChild","Panel","title","children","About","LeftColumn","degreesToRadians","degree","Math","PI","MatterportLogo","logo","tempGeometry","material","rotations","x","y","z","positions","LShapeGeometry","createMeshLogo","root","Object3D","i","geometry","BoxGeometry","j","length","Mesh","position","updateMatrix","merge","matrix","mesh","rotateX","rotateY","rotateZ","add","MeshPhongMaterial","color","transparent","side","DoubleSide","reflectivity","opacity","specular","scale","copy","Vector3","rotation","Boundaries","boundaries","wallMaterial","materialTransparent","floorMaterial","floor","addToFloor","obj","loader","TextureLoader","floorTexture","load","wrapS","wrapT","RepeatWrapping","repeat","set","anisotropy","encoding","sRGBEncoding","MeshLambertMaterial","map","wallTexture","MeshBasicMaterial","createWalls","walls","createWallMeshes","positionWalls","createFloor","positionFloor","PlaneBufferGeometry","receiveShadow","BoxBufferGeometry","Desk","addSceneNode","GLTFLoader","onLoad","scene","Bedroom","SceneCore","canvas","camera","renderer","components","controls","canvasWidth","window","innerWidth","canvasHeight","currentScene","sceneProjects","sceneObjMap","init","project","background","Color","setSize","domElement","activate","handleResize","aspect","updateProjectionMatrix","node","componentName","visible","animate","requestAnimationFrame","renderScene","update","forEach","c","Object","entries","key","value","Scene","PerspectiveCamera","WebGLRenderer","antialias","alpha","projectName","includes","matterportLogo","matterportLogoLight","DirectionalLight","castShadow","container","animalCrossLight","SpotLight","createControls","loadObjects","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","createDesk","createBedroom","render","SceneComponent","sceneCore","getElementById","currentProject","addEventListener","removeEventListener","nextProps","updateProject","Pie","totalCircumference","clickTimeout","onClick","setState","pieClicked","clearTimeout","setTimeout","onMouseOver","e","classList","contains","pieHover","onMouseOut","circleElements","viewSize","percentage","calculatePercentage","index","createProgressCircle","circumference","completion","strokeColor","radius","diameter","offsetCompletion","d","stroke","strokeDasharray","strokeDashoffset","months","viewBox","renderCircleElements","Projects","projects","type","ThreeD","TwoD","projectsMap","0","1","2","onNext","prevState","currentProjectCount","onPrev","getUIProject","uiProject","ExpBar","text","style","width","backgroundColor","Badges","badges","badge","idx","renderBadges","WorkExp","onOpenModal","openModal","onCloseModal","matterportExp","ellieMaeDevExp","ellieMaeDevInternExp","ellieMaeQAExp","allow","height","scrolling","App","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1009ccc6.chunk.js","sourcesContent":["import React from 'react';\nimport './projects.scss';\nimport SceneComponent from './components/scene/SceneComponent';\nimport Pie from '../work-exp/pie/Pie';\nexport enum ProjectTypes {\n  TwoD,\n  ThreeD\n}\nclass Projects extends React.Component<{}, ProjectsState> {\n  private projects = [{\n    name: 'matterport-logo',\n    type: ProjectTypes.ThreeD,\n  }, {\n    name: 'animal-crossing',\n    type: ProjectTypes.ThreeD,\n  }, {\n    name: 'pie',\n    type: ProjectTypes.TwoD,\n    project: <Pie />\n  }\n  ];\n  private projectsMap: { [key: number]: string } = {\n    0: 'Matterport Logo',\n    1: 'Animal Crossing in Three',\n    2: 'Pie'\n  }\n\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      currentProjectCount: 0,\n    };\n  }\n\n  private onNext = () => {\n    this.setState((prevState: ProjectsState) => ({ currentProjectCount: prevState.currentProjectCount + 1 }));\n  }\n\n  private onPrev = () => {\n    this.setState((prevState: ProjectsState) => ({ currentProjectCount: prevState.currentProjectCount - 1 }));\n  }\n\n  private getUIProject = () => {\n    const uiProject = this.projects[this.state.currentProjectCount].project;\n    return uiProject ? uiProject : null;\n  }\n\n  render() {\n    const currentProject = this.projects[this.state.currentProjectCount];\n\n    return (\n      <div id='projects'>\n        <div className='projects-container'>\n          {\n            currentProject.type === ProjectTypes.ThreeD &&\n            <SceneComponent currentProject={currentProject.name}/>\n          }\n          {\n            currentProject.type === ProjectTypes.TwoD &&\n            this.getUIProject()\n          }\n          <div className='current-project'>\n            {\n              this.state.currentProjectCount !== 0 &&\n              <div className='click-prev' onClick={this.onPrev}>\n                <span className='bryan icon-prev' />\n              </div>\n            }\n            <span className='project-name'>{this.projectsMap[this.state.currentProjectCount]}</span>\n            {\n              this.state.currentProjectCount !== this.projects.length - 1 &&\n              <div className='click-next' onClick={this.onNext}>\n                <span className='bryan icon-next' />\n              </div>\n            }\n          </div>\n        </div>\n      </div>);\n  }\n}\n\ninterface ProjectsState {\n  currentProjectCount: number;\n}\n\nexport default Projects;\n","import React from 'react';\nimport './profilePic.scss';\n\nclass ProfilePic extends React.Component<ProfilePicProps, {}> {\n  constructor(props: ProfilePicProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='profile-pic'>\n      <img alt={this.props.profileAlt} src={`${process.env.PUBLIC_URL}/images/${this.props.profileSrc}`}/>\n    </div>);\n  }\n}\n\ninterface ProfilePicProps {\n  profileAlt: string;\n  profileSrc: string;\n}\n\nexport default ProfilePic;\n","import React from 'react';\nimport './name.scss';\n\nclass Name extends React.Component<NameProps, {}> {\n  constructor(props: NameProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='name'>\n      <span>{this.props.name}</span>\n    </div>);\n  }\n}\n\ninterface NameProps {\n  name: string;\n}\n\nexport default Name;\n","import React from 'react';\n\nclass Description extends React.Component<DescriptionProps, {}> {\n  constructor(props: DescriptionProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='description'>\n      <p>{this.props.description}</p>\n    </div>);\n  }\n}\n\ninterface DescriptionProps {\n  description: string;\n}\n\nexport default Description;\n","import React from 'react';\nimport './location.scss';\nimport '../../font-icons/style.scss';\n\nclass Location extends React.Component<LocationProps, {}> {\n  constructor(props: LocationProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='location'>\n      <span className='bryan icon-location'/>\n      <span className='location'>{this.props.location}</span>\n    </div>);\n  }\n}\n\ninterface LocationProps {\n  location: string;\n}\n\nexport default Location;\n","import React from 'react';\nimport './contactInfo.scss';\n\nclass ContactInfo extends React.Component<ContactInfoProps, {}> {\n  constructor(props: ContactInfoProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='contact-info'>\n      <div>\n        <a className='linkedin' href='https://www.linkedin.com/in/bryancnguyen/' target='_blank' rel='noopener noreferrer'>LinkedIn</a>\n      </div>\n      <div>\n        <a className='github' href='https://github.com/Bryancnguyen' target='_blank' rel='noopener noreferrer'>Github</a>\n      </div>\n      <div>\n        <a className='email' href='mailto:bryancanhnguyen@gmail.com'>{this.props.contactInfo}</a>\n      </div>\n    </div>);\n  }\n}\n\ninterface ContactInfoProps {\n  contactInfo: string;\n}\n\nexport default ContactInfo;\n","import React from 'react';\nimport './resume.scss';\n\nclass Resume extends React.Component{\n  constructor(props: {}) {\n    super(props);\n    this.state = {};\n  }\n\n  private onResumeBtnClick() {\n    const link = document.createElement('a');\n    link.href = `${process.env}/images/BryansResume.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  render() {\n    return (\n    <div id='resume'>\n      {/* <button onClick={this.onResumeBtnClick}>Resume</button> */}\n    </div>);\n  }\n}\n\n\nexport default Resume;\n","import React from 'react';\nimport './panel.scss';\n\nclass Panel extends React.Component<PanelProps, {}> {\n  constructor(props: PanelProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n    <div className='panel'>\n      { this.props.title && <h2>{title}</h2> }\n      {this.props.children}\n    </div>);\n  }\n}\n\ninterface PanelProps {\n  title?: string;\n}\n\nexport default Panel;\n","import React from 'react';\nimport './about.scss';\n\nclass About extends React.Component {\n  constructor(props: {}) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n    <div id='about'>\n      <h1>Hello World</h1>\n      <p>I am currently a Software Engineer specializing in Front End Web Development.\n        I've been building visuals for the web my whole career and have worked with small and large scale projects\n        both in a start up and mid-sized company.\n      </p>\n      <p>\n        I enjoy consuming the vast number of libraries that encompass the world of Javascript\n        and making small prototypes from each of them. I am currently building applications in ReactJS and applying ThreeJS to some of my\n        personal projects.\n      </p>\n      <p>\n        I am an aspiring engineer that continues to enjoy writing concise code and will not hesitate if a complex problem appears.\n        Just feed me coffee and I'll code anything for you.\n      </p>\n    </div>);\n  }\n}\n\nexport default About;\n","import React from 'react';\nimport './leftColumn.scss';\nimport ProfilePic from './profile-pic/ProfilePic';\nimport Name from './name/Name';\nimport Description from './description/Description';\nimport Location from './location/Location';\nimport ContactInfo from './contact-info/ContactInfo';\nimport Resume from './resume/resume';\nimport Panel from '../panel/Panel';\nimport About from '../about/About';\n\nclass LeftColumn extends React.Component<{}, LeftColumnState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      profileAlt: 'bryan\"/s profile pic',\n      profileSrc: 'profile_pic.jpg',\n      name: 'Bryan Nguyen',\n      description: 'Software Engineer',\n      location: 'San Jose, CA',\n      contactInfo: 'bryancanhnguyen@gmail.com'\n    };\n  }\n\n  render() {\n    return (\n      <div id='left-column'>\n        <Panel>\n          <div className='profile-container'>\n            <ProfilePic profileAlt={this.state.profileAlt} profileSrc={this.state.profileSrc}/>\n            <Name name={this.state.name}/>\n            <Description description={this.state.description}/>\n            <Location location={this.state.location}/>\n            <ContactInfo contactInfo={this.state.contactInfo}/>\n            <Resume />\n          </div>\n          <div className='aboutme-container'>\n            <About/>\n          </div>\n        </Panel>\n      </div>\n    )\n  }\n\n  componentDidMount() {\n  }\n}\n\ninterface LeftColumnState {\n  profileAlt: string;\n  profileSrc: string;\n  name: string;\n  description: string;\n  location: string;\n  contactInfo: string;\n}\n\nexport default LeftColumn;\n","export const degreesToRadians = (degree: number) => {\n  return degree * (Math.PI / 180);\n}","import { Object3D, MeshPhongMaterial, DoubleSide, BoxGeometry, Mesh, Geometry, Vector3 } from 'three';\nimport { degreesToRadians } from '../utils/degreesToRadians';\nimport ComponentType from '../ComponentType';\n\nexport class MatterportLogo implements ComponentType {\n  public readonly name = 'matterport-logo';\n  private logo: Object3D;\n  private tempGeometry: Mesh | null;\n  private material: MeshPhongMaterial;\n  // private currentLevitate: number = 0;\n  // private maxLevitate: number = 200;\n  // private goingUp: boolean = true;\n  private rotations = [\n    { x: 25, y: -43.05, z: 0 },\n  ];\n  private positions = [\n    { x: 0, y: 0, z: 0 },\n  ];\n  private LShapeGeometry = [\n    { x: 1, y: 0, z: 0 },\n    { x: 1, y: 1, z: 0 },\n    { x: 1, y: 2, z: 0 },\n    { x: -1, y: 0, z: 0 },\n    { x: 1, y: 3, z: 0 },\n    { x: 1, y: 4, z: -0 },\n    { x: 1, y: 4, z: -1 },\n    { x: 1, y: 4, z: -2 },\n    { x: 1, y: 4, z: -3 },\n    // OPPOSITE SIDE\n    { x: 0, y: 4, z: -3 },\n    { x: -1, y: 4, z: -3 },\n    { x: -2, y: 4, z: -3 },\n    { x: -2, y: 3, z: -3 },\n    { x: -2, y: 2, z: -3 },\n    { x: -2, y: 1, z: -3 },\n    { x: -2, y: 0, z: -3 },\n    { x: -2, y: 0, z: -2 },\n    { x: -2, y: 0, z: -1 },\n    { x: -2, y: 0, z: 0 },\n  ];\n\n  constructor() {\n    this.material = new MeshPhongMaterial({\n      color: 0xFF3158,\n      transparent: true,\n      side: DoubleSide,\n      reflectivity: 1,\n      opacity: 0.8,\n      specular: 0xFC7A8C,\n    });\n    this.logo = this.createMeshLogo();\n    this.tempGeometry = null;\n    this.logo.scale.copy(new Vector3(50, 50, 50));\n  }\n\n  public get container() {\n    return this.logo;\n  }\n\n  /**\n   * Construct Matterport Logo\n   */\n  private createMeshLogo = () => {\n    const root = new Object3D();\n    for (let i = 0; i < 1; i++) {\n      const geometry = new BoxGeometry(5, 5, 5);\n      for (let j = 0; j < this.LShapeGeometry.length; j++) {\n        this.tempGeometry = new Mesh(new BoxGeometry(5, 5, 5));\n        this.tempGeometry.position.x = 5 * this.LShapeGeometry[j].x;\n        this.tempGeometry.position.y = 5 * this.LShapeGeometry[j].y;\n        this.tempGeometry.position.z = i === 1 ? 5 * this.LShapeGeometry[j].z : -1 * (5 * this.LShapeGeometry[j].z);\n        this.tempGeometry.updateMatrix();\n        geometry.merge(this.tempGeometry.geometry as Geometry, this.tempGeometry.matrix);\n      }\n  \n      const mesh = new Mesh(geometry, this.material);\n  \n      mesh.rotateX(degreesToRadians(this.rotations[i].x)); /// 180\n      mesh.rotateY(degreesToRadians(this.rotations[i].y));\n      mesh.rotateZ(degreesToRadians(this.rotations[i].z));\n      mesh.position.x += this.positions[i].x;\n      mesh.position.y += this.positions[i].y;\n      mesh.position.z += this.positions[i].z;\n  \n  \n      root.add(mesh);\n    }\n    return root;\n  }\n\n  // TODO: right now its spinning, I probably dont want that later\n  public update() {\n    this.logo.rotation.y -= 0.01;\n    // if (parseFloat(this.currentLevitate.toFixed(1)) === this.maxLevitate) {\n    //   this.goingUp = false;\n    // }\n    // else if (parseFloat(this.currentLevitate.toFixed(1)) === 0) {\n    //   this.goingUp = true;\n    // }\n    // let addValue = this.goingUp ? 1 : -1;\n    // this.logo.position.y += addValue;\n    // this.currentLevitate += addValue;\n  }\n}\n\nexport default MatterportLogo;\n","import { Object3D, Mesh, Vector3, MeshLambertMaterial, TextureLoader, sRGBEncoding, RepeatWrapping, PlaneBufferGeometry, DoubleSide, MeshBasicMaterial, BoxBufferGeometry } from 'three';\nimport ComponentType from '../ComponentType';\n\nexport class Boundaries implements ComponentType {\n  public readonly name = 'animal-crossing';\n  private boundaries: Object3D;\n  private wallMaterial: MeshLambertMaterial;\n  private materialTransparent: MeshBasicMaterial;\n  private floorMaterial: MeshBasicMaterial;\n  private floor: Object3D | null = null;\n  constructor() {\n    const loader = new TextureLoader();\n    const floorTexture = loader.load(`${process.env.PUBLIC_URL}/assets/textures/a_flooring2.png`);\n    floorTexture.wrapS = floorTexture.wrapT = RepeatWrapping;\n    floorTexture.repeat.set( 6, 6 );\n    floorTexture.anisotropy = 16;\n    floorTexture.encoding = sRGBEncoding;\n    this.floorMaterial = new MeshLambertMaterial({\n      map: floorTexture,\n    });\n    const wallTexture = loader.load(`${process.env.PUBLIC_URL}/assets/textures/wall5.jpg`);\n    wallTexture.wrapS = wallTexture.wrapT = RepeatWrapping;\n    wallTexture.repeat.set( 2, 2 );\n    wallTexture.anisotropy = 16;\n    wallTexture.encoding = sRGBEncoding;\n    this.wallMaterial = new MeshLambertMaterial({\n      side: DoubleSide,\n      map: wallTexture,\n    });\n    this.materialTransparent =  new MeshBasicMaterial( { transparent: true, opacity: 0, side: DoubleSide} );\n\n    this.boundaries = this.createWalls();\n  }\n\n  private createWalls() {\n    const root = new Object3D();\n    const walls = this.createWallMeshes();\n    this.positionWalls(walls);\n    this.floor = this.createFloor();\n    this.positionFloor(this.floor);\n    walls.add(this.floor);\n    root.add(walls);\n    root.scale.copy(new Vector3(1, 1, 1));\n    return root;\n  }\n\n  private createFloor() {\n    const geometry = new PlaneBufferGeometry(3500, 2000);\n    const mesh = new Mesh(geometry, this.floorMaterial);\n    mesh.receiveShadow = true;\n    return mesh;\n  }\n\n  private createWallMeshes() {\n    const geometry = new BoxBufferGeometry(3500, 2000, 1500);\n    const mesh = new Mesh(geometry, [this.wallMaterial, this.wallMaterial,\n      this.wallMaterial, this.materialTransparent, this.materialTransparent, this.materialTransparent]);\n    mesh.receiveShadow = true;\n    return mesh;\n  }\n\n  public addToFloor = (obj: Object3D) => {\n    if (this.floor) {\n      this.floor.add(obj);\n    }\n  }\n\n  private positionWalls(mesh: Object3D) {\n    mesh.position.y = - 350;\n    mesh.rotation.x = - Math.PI / 4;\n  }\n\n  private positionFloor(mesh: Object3D) {\n    mesh.position.z = - 750;\n  }\n\n  public get container() {\n    return this.boundaries;\n  }\n\n  public update() {}\n}\n\nexport default Boundaries;","import { Object3D } from 'three';\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\nexport class Desk {\n  constructor(private addSceneNode: (obj: Object3D) => void) {\n\n  }\n\n  public createDesk() {\n    const loader = new GLTFLoader();\n    loader.load(`${process.env.PUBLIC_URL}/assets/desk/scene.gltf`, (obj: GLTF) => this.onLoad(obj));\n  }\n\n  private onLoad(obj: GLTF) {\n    obj.scene.position.x = 1000;\n    obj.scene.position.y = 650;\n    obj.scene.rotation.x = - Math.PI / 2;\n    obj.scene.rotation.z = - Math.PI;\n    obj.scene.rotation.y = - Math.PI / 2;\n    obj.scene.scale.set(2.2, 2.2, 2.2);\n    this.addSceneNode(obj.scene);\n  }\n}\n\nexport default Desk;","import { Object3D } from 'three';\nimport { GLTFLoader, GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\n\nexport class Bedroom {\n  constructor(private addSceneNode: (obj: Object3D) => void) {\n\n  }\n\n  public createBedroom() {\n    const loader = new GLTFLoader();\n    loader.load(`${process.env.PUBLIC_URL}/assets/bedroom/scene.gltf`, (obj: GLTF) => this.onLoad(obj));\n  }\n\n  private onLoad(obj: GLTF) {\n    obj.scene.position.x = -800;\n    obj.scene.position.z = 100;\n    obj.scene.position.y = 800;\n    obj.scene.rotation.x = - Math.PI / 2;\n    obj.scene.rotation.z = - Math.PI;\n    obj.scene.scale.set(13, 13, 13);\n    this.addSceneNode(obj.scene);\n  }\n}\n\nexport default Bedroom;","\nimport { Scene, PerspectiveCamera, Color, WebGLRenderer, Object3D, Camera, SpotLight, DirectionalLight } from 'three';\nimport MatterportLogo from '../matterport-logo/MatterportLogo';\nimport Boundaries from '../boundaries/Boundaries';\nimport ComponentType from '../ComponentType';\nimport Desk from '../desk/Desk';\nimport Bedroom from '../bedroom/Bedroom';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nclass SceneCore {\n  private camera: PerspectiveCamera;\n  private scene: Scene;\n  private renderer: WebGLRenderer;\n  private components: ComponentType[] = [];\n  private controls: OrbitControls | null = null;\n  private canvasWidth: number = window.innerWidth;\n  private canvasHeight: number = 500;\n  private currentScene: string = '';\n  private sceneProjects = ['matterport-logo', 'animal-crossing'];\n  private sceneObjMap: {[nodeName: string]: Object3D} = {};\n\n  constructor(private canvas: HTMLElement) {\n    // set up the scene\n    this.scene = new Scene();\n    this.camera = new PerspectiveCamera( 90, this.canvasWidth / this.canvasHeight, 1, 10000 );\n    this.renderer = new WebGLRenderer({ antialias: true, alpha: true });\n  }\n\n  public init = (project: string) => {\n    this.camera.position.set( 0, 0, 2500 );\n    this.scene.add(this.camera);\n    // set scene color\n    this.scene.background = new Color(0x121212);\n    this.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\n    if (this.canvas) {\n      this.canvas.appendChild(this.renderer.domElement);\n    }\n    this.activate(project);\n  }\n\n  /**\n   * Resize function for when window size changes\n   */\n  public handleResize = () => {\n    this.camera.aspect = window.innerWidth / this.canvasHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize(window.innerWidth, this.canvasHeight)\n  }\n\n  public updateProject(projectName: string) {\n    if (!this.sceneProjects.includes(projectName)) {\n      // if the project doesn't exist, it's probably because its not a threejs Project, so go ahead hide\n      this.scene.visible = false;\n    } else {\n      this.scene.visible = true;\n      // if the project does exist, find the object and update its visibility in our scene\n      this.currentScene = projectName;\n    }\n  }\n\n  private activate(project: string) {\n    // Boundaries will contain the entire group of objects inside it! Hierarchy!\n    const boundaries = new Boundaries();\n    const matterportLogo = new MatterportLogo();\n\n    // TODO: move this light creation some where else\n    const matterportLogoLight = new DirectionalLight(0xFFFFFF, 2.5);\n    matterportLogoLight.position.copy(this.camera.position);\n    matterportLogoLight.castShadow = true;\n    matterportLogo.container.add(matterportLogoLight)\n\n    const animalCrossLight = new SpotLight(0xFBEEE4, 1.5);\n    animalCrossLight.position.copy(this.camera.position);\n    animalCrossLight.castShadow = true;\n    boundaries.container.add(animalCrossLight);\n \n    this.addSceneNode(matterportLogo.container, matterportLogo.name);\n    this.addSceneNode(boundaries.container, boundaries.name);\n\n    // show the matterport logo as its the first project\n    this.currentScene = project === matterportLogo.name ? matterportLogo.name : boundaries.name;\n\n    // create controls\n    this.createControls(this.camera, this.renderer);\n\n    // lazy load content\n    this.loadObjects(boundaries);\n\n    this.components = [matterportLogo];\n  }\n\n  private createControls(camera: Camera, renderer: WebGLRenderer) {\n    this.controls = new OrbitControls( camera, renderer.domElement );\n    this.controls.enableDamping = true;\n    this.controls.dampingFactor = 0.05;\n\n    this.controls.screenSpacePanning = false;\n\n    this.controls.minDistance = 1000;\n    this.controls.maxDistance = 5000;\n\n    this.controls.maxPolarAngle = Math.PI / 2;\n  }\n\n  private loadObjects(boundaries: Boundaries) {\n    const desk = new Desk(boundaries.addToFloor);\n    desk.createDesk();\n\n    const bedroom = new Bedroom(boundaries.addToFloor);\n    bedroom.createBedroom();\n  }\n\n  /**\n   * Function to allow adding to scene\n   * @param node \n   */\n  public addSceneNode = (node: Object3D, componentName: string) => {\n    // start out not visible\n    node.visible = false;\n    this.scene.add(node);\n    this.sceneObjMap[componentName] = node;\n  }\n\n  /**\n   * Function allow retrieval of camera\n   */\n  public getCamera() {\n    return this.camera;\n  }\n\n  private renderScene() {\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Update loop for components and the scene\n   */\n  public animate = () => {\n    requestAnimationFrame(this.animate);\n    // render scene\n    this.renderScene();\n    // update controls!\n    if (this.controls) {\n      this.controls.update();\n    }\n    // call each components individual update loop\n    this.components.forEach((c: ComponentType) => {\n      c.update();\n    });\n\n    for (let [key, value] of Object.entries(this.sceneObjMap)) {\n      if (key === this.currentScene) {\n        value.visible = true;\n      } else {\n        value.visible = false;\n      }\n    }\n  }\n}\n\nexport default SceneCore;\n","import React from 'react';\nimport SceneCore from './SceneCore';\nimport './scene.scss';\nclass SceneComponent extends React.Component<SceneComponentProps, {}> {\n  private sceneCore: SceneCore | null = null;\n\n  constructor(props: SceneComponentProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public componentDidMount() {\n    const canvas = document.getElementById('canvas')!;\n    this.sceneCore = new SceneCore(canvas);\n    this.sceneCore.init(this.props.currentProject);\n    this.sceneCore.animate();\n    if (this.sceneCore) {\n      window.addEventListener('resize', this.sceneCore.handleResize, false);\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.sceneCore) {\n      window.removeEventListener('resize', this.sceneCore.handleResize, false)\n    }\n  }\n\n  render() {\n    return (<div id='canvas'/>)\n  }\n\n  public componentDidUpdate(nextProps: SceneComponentProps) {\n    if (nextProps.currentProject !== this.props.currentProject) {\n      this.updateProject(this.props.currentProject);\n    }\n  }\n\n  private updateProject(project: string) {\n    if (!this.sceneCore) return;\n    this.sceneCore.updateProject(project);\n  }\n}\n\ninterface SceneComponentProps {\n  currentProject: string;\n}\n\nexport default SceneComponent;\n","import React from 'react';\nimport './pie.scss';\n\n/**\n * Our little pie will be made up of X numbers of <circles></circles>\n * lets see how that goes..\n */\nclass Pie extends React.Component<PieProps, PieState> {\n  private totalCircumference = 0;\n  private clickTimeout: number = 0;\n\n  constructor(props: PieProps) {\n    super(props);\n    this.state = {\n      circleElements: [],\n      pieHover: false,\n      pieClicked: false,\n    };\n  }\n\n  private onClick = () => {\n    this.setState({pieClicked: true});\n    window.clearTimeout(this.clickTimeout);\n    this.clickTimeout = window.setTimeout(() => {\n      this.setState({pieClicked: false});\n    }, 500);\n    if (this.props.onClick) this.props.onClick();\n  }\n\n  private renderCircleElements() {\n    this.totalCircumference = 0;\n    const circles = [{\n      c: 100,\n      viewSize: 40,\n      className: 'circle-bg',\n      onClick: this.onClick,\n    }, {\n      c: 110,\n      viewSize: 40,\n      className: `circle-bg-clicked ${this.state.pieClicked ? 'active': ''}`,\n      onClick: this.onClick,\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(31),\n      color: '#ffdb8d',\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(13),\n      color: '#0AE6E5',\n    }, {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(15),\n      color: '#ffa28d',\n    },\n    {\n      c: 100,\n      viewSize: 40,\n      className: 'circle',\n      percentage: this.calculatePercentage(22),\n      color: '#ff8db1',\n    }];\n    \n    return circles.map((c, index) => {\n      return this.createProgressCircle(c.c, c.viewSize, c.className, index, c.percentage, c.color, c.onClick);\n    });\n  }\n\n  private createProgressCircle(circumference: number, viewSize: number, className: string, index: number, completion?: number, strokeColor?: string, onClick?: () => void) {\n    const radius = circumference / (2 * Math.PI);\n    const diameter = radius * 2;\n    const x = viewSize / 2;\n    const y = ((viewSize - diameter) / 2);\n    const offsetCompletion = this.totalCircumference > 0 ? -this.totalCircumference : this.totalCircumference;\n    this.totalCircumference += circumference && completion ? completion : 0;\n    if (strokeColor && completion) {\n      return (\n        <path\n          key={`circle-${index}`}\n          className={className}\n          d={`M${x} ${y} a ${radius} ${radius} 0 0 1 0 ${diameter} a ${radius} ${radius} 0 0 1 0 -${diameter}`}\n          stroke={strokeColor}\n          onClick={onClick}\n          strokeDasharray={`${completion}, 100`}\n          strokeDashoffset={offsetCompletion}\n        />\n      );\n    } else {\n      return (\n        <path\n          key={`circle-${index}`}\n          onClick={onClick}\n          className={className}\n          d={`M${x} ${y} a ${radius} ${radius} 0 0 1 0 ${diameter} a ${radius} ${radius} 0 0 1 0 -${diameter}`}\n        />\n      );\n    }\n  }\n\n  private calculatePercentage(months: number) {\n    const totalMonths = 81;\n    const monthPercentage = (months / totalMonths) * 100;\n\n    return monthPercentage;\n  }\n\n  private onMouseOver = (e: React.MouseEvent) => {\n    const target = e.target as HTMLElement;\n    if (!target) return;\n    if (target.classList.contains('circle-bg') || target.classList.contains('percentage') || target.classList.contains('circle-bg-clicked')) {\n      this.setState({pieHover: true});\n    }\n  }\n\n  private onMouseOut = (e: never) => {\n    this.setState({pieHover: false});\n  }\n\n  render() {\n    return (\n    <div id='pie' className={this.state.pieHover ? 'pieHover': ''} onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut}>\n      <svg viewBox=\"0 0 40 40\" className=\"circular-chart\">\n      {this.renderCircleElements()}\n      <text x=\"20\" y=\"22\" className=\"percentage\" onClick={this.onClick}>100%</text>\n    </svg>\n    </div>);\n  }\n}\n\ninterface PieState {\n  circleElements: JSX.Element[];\n  pieHover: boolean;\n  pieClicked: boolean;\n}\n\ninterface PieProps {\n  onClick?: () => void;\n}\n\n/**\n * Pie should be able to take in a set of items each with their own\n * percentage of the pie. \n */\n\nexport default Pie;\n","import React from 'react';\nimport './expBar.scss';\n\nclass ExpBar extends React.Component<ExpBarProps, {}> {\n  constructor(props: ExpBarProps) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { color, percentage, text } = this.props;\n\n    const style = {\n      width: percentage * 12,\n      backgroundColor: color,\n    }\n\n    return (\n    <div className='exp-bar'>\n      <div className='bar' style={style}/>\n      <span className='text'>{text}</span>\n    </div>);\n  }\n}\n\ninterface ExpBarProps {\n  percentage: number;\n  text: string;\n  color: string;\n}\n\nexport default ExpBar;\n","import React from 'react';\nimport './badges.scss';\n\nclass Badges extends React.Component<BadgesProps, {}> {\n  constructor(props: BadgesProps) {\n    super(props);\n    this.state = {};\n  }\n\n  private renderBadges() {\n    return this.props.badges.map((badge, idx) => {\n      return (\n      <span key={`badge-${idx}`} className='badge'>\n        {badge}\n      </span>)\n    });\n  }\n\n  render() {\n    return (\n    <div className='badges'>\n      { this.renderBadges() }\n    </div>);\n  }\n}\n\ninterface BadgesProps {\n  badges: string[];\n}\n\nexport default Badges;\n","import React from \"react\";\nimport \"./workExp.scss\";\nimport Panel from \"../panel/Panel\";\nimport ExpBar from \"./exp-bar/ExpBar\";\nimport Badges from \"./badges/Badges\";\nclass WorkExp extends React.Component<{}, WorkExpState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      openModal: false,\n    };\n  }\n\n  private onOpenModal = () => {\n    this.setState({ openModal: true });\n  };\n\n  private onCloseModal = () => {\n    this.setState({ openModal: false });\n  };\n\n  private calculatePercentage(months: number) {\n    const totalMonths = 81;\n    const monthPercentage = (months / totalMonths) * 100;\n    return monthPercentage;\n  }\n\n  render() {\n    const matterportExp = this.calculatePercentage(22);\n    const matterportBadges = [\n      \"Typescript\",\n      \"ReactJS\",\n      \"Preact\",\n      \"ThreeJS\",\n      \"NodeJS\",\n      \"Jest\",\n    ];\n\n    const ellieMaeDevExp = this.calculatePercentage(15);\n    const ellieMae1Badges = [\n      \"AngularJS\",\n      \"NodeJS\",\n      \"Mocha\",\n      \"Jasmine\",\n      \"Karma\",\n    ];\n\n    const ellieMaeDevInternExp = this.calculatePercentage(13);\n    const ellieMaeDevInternBadges = [\n      \"AngularJS\",\n      \"Wordpress\",\n      \"PHP\",\n      \"Content Management System\",\n    ];\n\n    const ellieMaeQAExp = this.calculatePercentage(31);\n    const ellieMaeQABadges = [\n      \"Java\",\n      \"Selenium\",\n      \"Appium\",\n      \"WebDriverIO\",\n      \"SoapUI\",\n      \"Post Man\",\n    ];\n\n    return (\n      <div id=\"work-exp\">\n        <Panel>\n          <div className=\"header\">Matterport</div>\n          <div className=\"sub-header\">Software Engineer</div>\n          <ExpBar\n            text={\"1 Year 10 Months\"}\n            color={\"#ff8db1\"}\n            percentage={matterportExp}\n          />\n          <p>\n            Worked on researching and creating new user experiences within\n            Showcase and Workshop\n              </p>\n          <p>\n            Showcase was a viewer for the a 3D model that a user could\n            interact with and could be embed within webpages\n              </p>\n          <p>\n            Workshop was an editor that allowed model owners to edit how a\n            model would be presented to the viewer\n              </p>\n          <iframe\n            title=\"matterport\"\n            allow=\"vr\"\n            height=\"480\"\n            width=\"700\"\n            src=\"https://my.matterport.com/show/?m=f6dv1vRds4q\"\n            id=\"iFrameResizer0\"\n            scrolling=\"no\"\n          ></iframe>\n          <Badges badges={matterportBadges} />\n          <div className=\"header\">Ellie Mae</div>\n          <div className=\"sub-header\">Software Engineer I / II</div>\n          <ExpBar\n            text={\"1 Year 5 Months\"}\n            color={\"#8dffa2\"}\n            percentage={ellieMaeDevExp}\n          />\n          <p>\n            Worked on developing TPO Connect and TPO Admin, a web portal\n            that allowed investors and lenders to collaborate with their\n            customers\n              </p>\n          <p>\n            TPO Connect had a rich set of features such as uploading\n            documents, ordering credit, and processing a loan from end to\n            end\n              </p>\n          <p>\n            TPO Connnect Admin was another web portal that allowed investors\n            and lenders to personalize their TPO Connect portal and workflow\n              </p>\n          <img\n            className=\"tpo-photo\"\n            alt=\"TPO Connect\"\n            src={process.env.PUBLIC_URL + \"/images/tpo.png\"}\n          />\n          <Badges badges={ellieMae1Badges} />\n          <div className=\"header\">Ellie Mae</div>\n          <div className=\"sub-header\">Software Engineer Dev Intern</div>\n          <ExpBar\n            text={\"1 Year 1 Months\"}\n            color={\"#ffa28d\"}\n            percentage={ellieMaeDevInternExp}\n          />\n          <p>\n            Worked on developing a content management system using Wordpress\n            and AngularJS\n              </p>\n          <p>\n            Content management system was intended to be the source of truth\n            for re-usable UI components\n              </p>\n          <p>\n            Content management system would allow UX designers and engineers\n            to collaborate when creating components that all teams could\n            bootstrap\n              </p>\n          <Badges badges={ellieMaeDevInternBadges} />\n          <div className=\"header\">Ellie Mae</div>\n          <div className=\"sub-header\">QA Engineer Intern</div>\n          <ExpBar\n            text={\"2 Year 7 Months\"}\n            color={\"#ffdb8d\"}\n            percentage={ellieMaeQAExp}\n          />\n          <p>\n            Worked as an automation QA Engineer creating scripts that tested\n            Ellie Mae's web application\n              </p>\n          <p>\n            Responsible for writing test cases and designing automation\n            framework\n              </p>\n          <p>\n            Worked as a manual tester for Encompass, a desktop application\n            that ran only on Windows\n              </p>\n          <p>\n            Worked as a manual tester for TPO, a web based application\n            developed with PHP\n              </p>\n          <Badges badges={ellieMaeQABadges} />\n        </Panel>\n      </div>\n    );\n  }\n}\n\ninterface WorkExpState {\n  openModal: boolean;\n}\n\nexport default WorkExp;\n","import React from 'react';\nimport './index.scss';\nimport './App.scss';\nimport LeftColumn from './left-column/LeftColumn';\nimport Projects from './projects/Projects';\nimport WorkExp from './work-exp/WorkExp';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className='row'>\n        <Projects/>\n      </div>\n      <div className='row'>\n        <LeftColumn/>\n      </div>\n      <div className='row'>\n        <WorkExp />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}